{"ast":null,"code":"var _jsxFileName = \"D:\\\\ba-link-home-task\\\\frontend\\\\usermanager\\\\src\\\\store\\\\context.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiData = /*#__PURE__*/createContext({\n  users: getusers\n});\nexport const UserFromApi = props => {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    console.log('in user effect contect');\n    setLoading(true);\n    const BASE_URL = 'http://localhost:8000/users';\n    fetch(BASE_URL, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(res => {\n      return res.json();\n    }).then(data => {\n      const usersArr = [];\n\n      for (const key in data) {\n        const user = { ...data[key]\n        };\n        console.log(user);\n        usersArr.push(user);\n      }\n\n      setLoading(false);\n      setUsers(usersArr);\n      console.log('use effect :', usersArr);\n      console.log(users);\n    });\n  }, []); //   if (loading) {\n  //     console.log(\"loading \")\n  //     return <section>\n  //       <p>Loading...</p>\n  //     </section>\n  //   }\n\n  const getusers = () => {\n    setUsers(users);\n  };\n\n  const context = {\n    users: users\n  };\n  return /*#__PURE__*/_jsxDEV(apiData.Provider, {\n    value: context,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 12\n  }, this);\n};\n\n_s(UserFromApi, \"IT2mG1IwDwUbn7TXM4s8Lam0NAU=\");\n\n_c = UserFromApi;\nexport default apiData;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserFromApi\");","map":{"version":3,"sources":["D:/ba-link-home-task/frontend/usermanager/src/store/context.js"],"names":["createContext","useState","useEffect","apiData","users","getusers","UserFromApi","props","loading","setLoading","setUsers","console","log","BASE_URL","fetch","headers","then","res","json","data","usersArr","key","user","push","context","children"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAiCC,SAAjC,QAAiD,OAAjD;;AAEA,MAAMC,OAAO,gBAAGH,aAAa,CAAC;AAC1BI,EAAAA,KAAK,EAAEC;AADmB,CAAD,CAA7B;AAOA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAClC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACG,KAAD,EAAQM,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAEZS,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AAIAH,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMI,QAAQ,GAAG,6BAAjB;AACAC,IAAAA,KAAK,CAACD,QAAD,EAAW;AAAEE,MAAAA,OAAO,EAAE;AACvB,wBAAgB,kBADO;AAEvB,kBAAU;AAFa;AAAX,KAAX,CAAL,CAIGC,IAJH,CAIQC,GAAG,IAAI;AACX,aAAOA,GAAG,CAACC,IAAJ,EAAP;AACD,KANH,EAMKF,IANL,CAMUG,IAAI,IAAI;AACd,YAAMC,QAAQ,GAAC,EAAf;;AACA,WAAI,MAAMC,GAAV,IAAiBF,IAAjB,EAAsB;AACpB,cAAMG,IAAI,GAAC,EACT,GAAGH,IAAI,CAACE,GAAD;AADE,SAAX;AAGAV,QAAAA,OAAO,CAACC,GAAR,CAAYU,IAAZ;AAEAF,QAAAA,QAAQ,CAACG,IAAT,CAAcD,IAAd;AACD;;AAEDb,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAC,MAAAA,QAAQ,CAACU,QAAD,CAAR;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BQ,QAA3B;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACD,KArBH;AAuBD,GA/BM,EA+BJ,EA/BI,CAAT,CAJkC,CAsClC;AACA;AACA;AACA;AACA;AACA;;AAIA,QAAMC,QAAQ,GAAG,MAAM;AACpBK,IAAAA,QAAQ,CAACN,KAAD,CAAR;AACF,GAFD;;AAIA,QAAMoB,OAAO,GAAG;AACZpB,IAAAA,KAAK,EAACA;AADM,GAAhB;AAKA,sBAAO,QAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAEoB,OAAzB;AAAA,cACFjB,KAAK,CAACkB;AADJ;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CA3DM;;GAAMnB,W;;KAAAA,W;AA6Db,eAAeH,OAAf","sourcesContent":["import { createContext, useState,useEffect} from 'react'\r\n\r\nconst apiData = createContext({\r\n    users: getusers\r\n \r\n\r\n})\r\n\r\n\r\nexport const UserFromApi = (props) => {\r\n    const [loading, setLoading] = useState(true)\r\n    const [users, setUsers] = useState([])\r\n \r\n    useEffect(() => {\r\n        \r\n        console.log('in user effect contect')\r\n\r\n\r\n\r\n        setLoading(true)\r\n        const BASE_URL = 'http://localhost:8000/users'\r\n        fetch(BASE_URL, { headers: { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n           }})\r\n          .then(res => {\r\n            return res.json()\r\n          }).then(data => {\r\n            const usersArr=[]\r\n            for(const key in data){\r\n              const user={         \r\n                ...data[key]\r\n              }\r\n              console.log(user)\r\n              \r\n              usersArr.push(user)\r\n            }\r\n           \r\n            setLoading(false)\r\n            setUsers(usersArr)\r\n            console.log('use effect :',usersArr);\r\n            console.log(users)\r\n          })\r\n    \r\n      }, [])\r\n    \r\n    \r\n    //   if (loading) {\r\n    //     console.log(\"loading \")\r\n    //     return <section>\r\n    //       <p>Loading...</p>\r\n    //     </section>\r\n    //   }\r\n\r\n\r\n     \r\n    const getusers = () => {\r\n       setUsers(users);\r\n    }\r\n\r\n    const context = {\r\n        users:users \r\n    }\r\n\r\n\r\n    return <apiData.Provider value={context}>\r\n        {props.children}\r\n    </apiData.Provider>\r\n}\r\n\r\nexport default apiData;"]},"metadata":{},"sourceType":"module"}