{"ast":null,"code":"import _objectSpread from\"D:/ba-link-home-task/frontend/usermanager/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:/ba-link-home-task/frontend/usermanager/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';var Usefetch=function Usefetch(){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),users=_useState4[0],setUsers=_useState4[1];useEffect(function(){setLoading(true);var BASE_URL='/users';fetch(BASE_URL,{headers:{'Content-Type':'application/json','Accept':'application/json'}}).then(function(res){return res.json();}).then(function(data){var usersArr=[];for(var key in data){var user=_objectSpread({},data[key]);usersArr.push(user);}setLoading(false);setUsers(usersArr);});},[]);return{loading:loading,users:users};};export default Usefetch;","map":{"version":3,"sources":["D:/ba-link-home-task/frontend/usermanager/src/hooks/UseFetch.js"],"names":["useState","useEffect","Usefetch","loading","setLoading","users","setUsers","BASE_URL","fetch","headers","then","res","json","data","usersArr","key","user","push"],"mappings":"+TAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CAIA,GAAMC,CAAAA,QAAQ,CAAC,QAATA,CAAAA,QAAS,EAAI,CACf,cAA8BF,QAAQ,CAAC,IAAD,CAAtC,wCAAOG,OAAP,eAAgBC,UAAhB,eACA,eAA0BJ,QAAQ,CAAC,EAAD,CAAlC,yCAAOK,KAAP,eAAcC,QAAd,eAEAL,SAAS,CAAC,UAAM,CAKZG,UAAU,CAAC,IAAD,CAAV,CACA,GAAMG,CAAAA,QAAQ,CAAG,QAAjB,CACAC,KAAK,CAACD,QAAD,CAAW,CAAEE,OAAO,CAAE,CACvB,eAAgB,kBADO,CAEvB,SAAU,kBAFa,CAAX,CAAX,CAAL,CAIGC,IAJH,CAIQ,SAAAC,GAAG,CAAI,CACX,MAAOA,CAAAA,GAAG,CAACC,IAAJ,EAAP,CACD,CANH,EAMKF,IANL,CAMU,SAAAG,IAAI,CAAI,CACd,GAAMC,CAAAA,QAAQ,CAAC,EAAf,CACA,IAAI,GAAMC,CAAAA,GAAV,GAAiBF,CAAAA,IAAjB,CAAsB,CACpB,GAAMG,CAAAA,IAAI,kBACLH,IAAI,CAACE,GAAD,CADC,CAAV,CAKAD,QAAQ,CAACG,IAAT,CAAcD,IAAd,EACD,CAEDZ,UAAU,CAAC,KAAD,CAAV,CACAE,QAAQ,CAACQ,QAAD,CAAR,CAED,CApBH,EAsBD,CA7BM,CA6BJ,EA7BI,CAAT,CAgCC,MAAO,CAACX,OAAO,CAAPA,OAAD,CAASE,KAAK,CAALA,KAAT,CAAP,CACJ,CArCD,CAuCA,cAAeH,CAAAA,QAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\n\r\n\r\nconst Usefetch=()=>{\r\n    const [loading, setLoading] = useState(true)\r\n    const [users, setUsers] = useState([])\r\n \r\n    useEffect(() => {\r\n        \r\n       \r\n\r\n\r\n        setLoading(true)\r\n        const BASE_URL = '/users'\r\n        fetch(BASE_URL, { headers: { \r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n           }})\r\n          .then(res => {\r\n            return res.json()\r\n          }).then(data => {\r\n            const usersArr=[]\r\n            for(const key in data){\r\n              const user={         \r\n                ...data[key]\r\n              }\r\n            \r\n              \r\n              usersArr.push(user)\r\n            }\r\n           \r\n            setLoading(false)\r\n            setUsers(usersArr)\r\n      \r\n          })\r\n    \r\n      }, [])\r\n      \r\n\r\n     return {loading,users } \r\n}\r\n\r\nexport default Usefetch;"]},"metadata":{},"sourceType":"module"}