{"ast":null,"code":"var _jsxFileName = \"D:\\\\ba-link-home-task\\\\frontend\\\\usermanager\\\\src\\\\components\\\\users\\\\Select.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Vlidation from './Validation'; //need to solve styling \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Select = props => {\n  _s();\n\n  const selectHandler = e => {\n    console.log(e.target.value);\n    props.HandleInputEvent(e, props.name);\n  }; //let is limited only to his scope let wont work in this case.\n\n\n  var arr = [];\n  const [options, setOptions] = useState(new Array(121));\n  useEffect(() => {\n    arr = Array.apply(null, {\n      length: 121\n    }).map((elem, idx) => {\n      return idx + 1;\n    });\n    console.log(arr);\n    setOptions(arr);\n    console.log(\"options is \", options);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: props.val,\n      onChange: selectHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        defaultValue: \"Age\",\n        children: \"Age\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), options.map(value => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: props.val,\n          children: value\n        }, value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 28\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), !props.isValid ? /*#__PURE__*/_jsxDEV(Vlidation, {\n      validationName: props.validationName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 26\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s(Select, \"HQjvWICy+UeTtpyETaAopFj1Qfs=\");\n\n_c = Select;\nexport default Select;\n\nvar _c;\n\n$RefreshReg$(_c, \"Select\");","map":{"version":3,"sources":["D:/ba-link-home-task/frontend/usermanager/src/components/users/Select.js"],"names":["React","useEffect","useState","Vlidation","Select","props","selectHandler","e","console","log","target","value","HandleInputEvent","name","arr","options","setOptions","Array","apply","length","map","elem","idx","val","isValid","validationName"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,SAAP,MAAsB,cAAtB,C,CAMA;;;;;AACA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AAGtB,QAAMC,aAAa,GAAEC,CAAD,IAAK;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,KAArB;AACAN,IAAAA,KAAK,CAACO,gBAAN,CAAuBL,CAAvB,EAAyBF,KAAK,CAACQ,IAA/B;AACH,GAHD,CAHsB,CAStB;;;AACA,MAAIC,GAAG,GAAC,EAAR;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,IAAIe,KAAJ,CAAU,GAAV,CAAD,CAAtC;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AAIZa,IAAAA,GAAG,GAAGG,KAAK,CAACC,KAAN,CAAY,IAAZ,EAAkB;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAlB,EAAmCC,GAAnC,CAAuC,CAACC,IAAD,EAAOC,GAAP,KAAc;AACvD,aAAOA,GAAG,GAAG,CAAb;AACH,KAFK,CAAN;AAIAd,IAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AAIAE,IAAAA,UAAU,CAACF,GAAD,CAAV;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BM,OAA1B;AACH,GAdQ,EAcN,EAdM,CAAT;AAkBA,sBACI;AAAA,4BACA;AACI,MAAA,KAAK,EAAEV,KAAK,CAACkB,GADjB;AAEI,MAAA,QAAQ,EAAEjB,aAFd;AAAA,8BAKI;AAAQ,QAAA,YAAY,EAAC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,EAOQS,OAAO,CAACK,GAAR,CAAaT,KAAD,IAAW;AACnB,4BAAO;AAAoB,UAAA,KAAK,EAAEN,KAAK,CAACkB,GAAjC;AAAA,oBAAuCZ;AAAvC,WAAaA,KAAb;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFD,CAPR;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAgBC,CAACN,KAAK,CAACmB,OAAP,gBAAgB,QAAC,SAAD;AAAW,MAAA,cAAc,EAAEnB,KAAK,CAACoB;AAAjC;AAAA;AAAA;AAAA;AAAA,YAAhB,GAAqE,IAhBtE;AAAA,kBADJ;AAoBH,CAnDD;;GAAMrB,M;;KAAAA,M;AAqDN,eAAeA,MAAf","sourcesContent":["import React, { useEffect,useState } from 'react'\r\nimport Vlidation from './Validation';\r\n\r\n\r\n\r\n\r\n\r\n//need to solve styling \r\nconst Select = (props) => {\r\n\r\n\r\n    const selectHandler=(e)=>{\r\n        console.log(e.target.value)\r\n        props.HandleInputEvent(e,props.name);\r\n    } \r\n\r\n\r\n    //let is limited only to his scope let wont work in this case.\r\n    var arr=[];\r\n    const [options, setOptions] = useState(new Array(121));\r\n\r\n    useEffect(() => {\r\n        \r\n        \r\n        \r\n        arr = Array.apply(null, { length: 121 }).map((elem, idx)=> {\r\n            return idx + 1;\r\n        });\r\n\r\n        console.log(arr)\r\n\r\n\r\n    \r\n        setOptions(arr)\r\n        console.log(\"options is \",options)\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <select\r\n            value={props.val}\r\n            onChange={selectHandler}\r\n\r\n        >\r\n            <option defaultValue=\"Age\">Age</option>\r\n            {\r\n                options.map((value) => {\r\n                    return <option key={value} value={props.val}>{value}</option>\r\n                })\r\n\r\n            }\r\n\r\n        </select>\r\n\r\n        {!props.isValid? <Vlidation validationName={props.validationName} /> :null}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Select\r\n"]},"metadata":{},"sourceType":"module"}