{"ast":null,"code":"var _jsxFileName = \"D:\\\\ba-link-home-task\\\\frontend\\\\usermanager\\\\src\\\\components\\\\users\\\\UserForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserForm = () => {\n  _s();\n\n  let arr = [];\n  useEffect(() => {\n    populateArr();\n  }, []);\n  const [firstName, setFirstName] = useState();\n  const [lastName, setLasttName] = useState();\n  const [age, setAge] = useState();\n  const [phone, setPhone] = useState();\n  const [options, setOptions] = useState([]);\n\n  const populateArr = () => {\n    for (var i = 0; i < 121; i++) {\n      arr.push(i); //console.log(options)\n    }\n\n    console.log(arr);\n    console.log(options);\n  };\n\n  setOptions(arr);\n\n  const submitHandler = event => {};\n\n  const handlePhone = e => {\n    setPhone(e.target.value);\n  };\n\n  const handleFirstName = e => {\n    setFirstName(e.target.value);\n  };\n\n  const handleLastName = e => {\n    setLasttName(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      required: true,\n      id: \"first-name\",\n      onChange: handleFirstName,\n      value: firstName,\n      value: firstName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      required: true,\n      id: \"last-name\",\n      onChange: handleLastName,\n      value: lastName,\n      value: lastName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: age,\n      onChange: e => setAge(e.target.value),\n      children: options.map((i, idx) => {\n        /*#__PURE__*/\n        _jsxDEV(\"options\", {\n          value: idx,\n          children: idx\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"tel\",\n      id: \"phone\",\n      name: \"phone\",\n      pattern: \"[0-9]{3}-[0-9]{3}-[0-9]{4}\",\n      required: true,\n      onChange: handlePhone,\n      value: phone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserForm, \"U1R6Qb+jEbCpNOzXsqbAfOeuQ3s=\");\n\n_c = UserForm;\nexport default UserForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"sources":["D:/ba-link-home-task/frontend/usermanager/src/components/users/UserForm.js"],"names":["React","useState","useEffect","UserForm","arr","populateArr","firstName","setFirstName","lastName","setLasttName","age","setAge","phone","setPhone","options","setOptions","i","push","console","log","submitHandler","event","handlePhone","e","target","value","handleFirstName","handleLastName","map","idx"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\n\r\nconst UserForm = () => {\r\n\r\n\r\n    let arr = [];\r\n    useEffect(() => {\r\n        populateArr();\r\n    }, [])\r\n\r\n    const [firstName, setFirstName] = useState();\r\n    const [lastName, setLasttName] = useState();\r\n    const [age, setAge] = useState();\r\n    const [phone, setPhone] = useState();\r\n\r\n    const [options, setOptions] = useState([]);\r\n    const populateArr=()=>{\r\n          \r\n        \r\n    \r\n        for (var i = 0; i < 121; i++) {\r\n            arr.push(i)\r\n            //console.log(options)\r\n        }\r\n        console.log(arr)\r\n        \r\n        console.log(options)\r\n    }\r\n    setOptions(arr);\r\n    const submitHandler = (event) => {\r\n\r\n\r\n    }\r\n    const handlePhone = (e) => {\r\n        setPhone(e.target.value);\r\n    }\r\n\r\n    const handleFirstName = (e) => {\r\n        setFirstName(e.target.value)\r\n    }\r\n    const handleLastName = (e) => {\r\n        setLasttName(e.target.value)\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n    return (\r\n\r\n        <form onSubmit={submitHandler}>\r\n\r\n\r\n\r\n            <input type=\"text\" required id=\"first-name\"\r\n                onChange={handleFirstName} value={firstName} value={firstName} />\r\n\r\n\r\n            <input type=\"text\" required id=\"last-name\"\r\n                onChange={handleLastName} value={lastName} value={lastName} />\r\n\r\n\r\n\r\n            <select\r\n                value={age}\r\n                onChange={(e) => setAge(e.target.value)}\r\n            >\r\n                {\r\n                    options.map((i,idx) => {\r\n                        <options value={idx}>{idx}</options>\r\n                    })\r\n                }\r\n            </select>\r\n\r\n            <input type=\"tel\" id=\"phone\" name=\"phone\" pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\" required\r\n                onChange={handlePhone}\r\n                value={phone}\r\n            />\r\n\r\n\r\n            <button>Add User</button>\r\n            <button>Back</button>\r\n\r\n\r\n        </form>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default UserForm\r\n"]},"metadata":{},"sourceType":"module"}